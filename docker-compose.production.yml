# This file (docker-compose.prod.yml) is for production it has commands that start
# a production-level service and avoids any dev dependencies

services:

  nginx:
    # Reverse proxy to serve front end and flat files
    image: dallascaley/custom-nginx:latest

    volumes:
      # nginx configuration file
      - ./backend/etc/nginx/nginx-production.conf:/etc/nginx/nginx.conf
      # sites-enabled folder
      - ./backend/etc/nginx/sites-enabled-production:/etc/nginx/sites-enabled
      # encryption folders, with read only option
      - ./backend/etc/encrypt:/etc/letsencrypt:ro

    ports:
      # Expose HTTPS port for reverse proxy to handle SSL
      - "443:443"
      # Expose HTTP port used for redirecting to HTTPS
      - "80:80"

    networks:
      # use the app-network
      - app-network

    depends_on:
      # Back end service dependency
      - backend
    
    environment:
      # Defines the variable for _run_ time use
      NODE_ENV: ${NODE_ENV}

    # Commands to run after the container starts
    command: >
      /bin/sh -c "
        apk update && 
        apk add --no-cache ca-certificates && 
        cp /etc/letsencrypt/live/local.prosaurus.com/local.prosaurus.com.crt /usr/local/share/ca-certificates/ && 
        update-ca-certificates && 
        nginx -g 'daemon off;'
      "

  backend:

    # Back end image to pull from Docker Hub (no build stage needed)
    image: dallascaley/breakroom-backend

    # Set the working directory inside the container at _run_ time
    working_dir: /app

    volumes:
      # sets the backend folder to be the app folder in the container
      - ./backend:/app

    ports:
      # sets back-end internal port to 80
      # set the back-end external port to 3000
      - "3000:80"

    networks:
      # use the app-network
      - app-network

    environment:
      # Defines the variable for _run_ time use
      NODE_ENV: ${NODE_ENV}

    # only in production, does npm installation while ommitting development dependencies
    # then runs traditional start script which is more efficient than nodemon
    command: sh -c "npm run start"

networks:

  # The internal network all the containers use
  app-network:
    # the network's name
    name: app-network
    # Type of connection it uses
    driver: bridge

volumes:
  backend_node_modules: